{"version":3,"sources":["containers/NotFound.js","libs/contextLib.js","libs/errorLib.js","containers/Home.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","containers/Signup.js","libs/awsLib.js","config.js","containers/NewNote.js","containers/Challenges.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","className","AppContext","createContext","useAppContext","useContext","onError","error","message","toString","Error","alert","Home","useState","notes","setNotes","isAuthenticated","isLoading","setIsLoading","loadNotes","API","get","useEffect","a","onLoad","PageHeader","ListGroup","concat","map","note","i","key","noteId","to","ListGroupItem","header","content","trim","split","Date","createdAt","toLocaleString","renderNotesList","LoaderButton","disabled","props","Button","Glyphicon","glyph","children","useFormFields","initialState","fields","setValues","event","target","id","value","Login","userHasAuthenticated","email","password","handleFieldChange","preventDefault","Auth","signIn","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","length","Signup","confirmPassword","confirmationCode","history","useHistory","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","push","HelpBlock","s3Upload","file","filename","now","name","Storage","vault","put","contentType","stored","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","NewNote","useRef","setContent","current","size","config","attachment","createNote","post","body","componentClass","e","files","bsStyle","Notes","useParams","challenge","setNote","isDeleting","setIsDeleting","saveNote","deleteNote","del","window","confirm","loadNote","attachmentURL","Static","rel","href","replace","width","height","controls","src","onClick","AuthenticatedRoute","rest","useLocation","pathname","search","UnauthenticatedRoute","redirect","url","location","regex","RegExp","results","exec","decodeURIComponent","querystring","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","signOut","currentSession","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","Provider","Boolean","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7afea3dc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","export function onError(error) {\n    let message = error.toString();\n  \n    // Auth errors\n    if (!(error instanceof Error) && error.message) {\n      message = error.message;\n    }\n  \n    alert(message);\n  }","import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Home.css\";\n\n\nexport default function Home() {\n  const [notes, setNotes] = useState([]);\n  const { isAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!isAuthenticated) {\n        return;\n      }\n  \n      try {\n        const notes = await loadNotes();\n        setNotes(notes);\n      } catch (e) {\n        onError(e);\n      }\n  \n      setIsLoading(false);\n    }\n  \n    onLoad();\n  }, [isAuthenticated]);\n  \n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n\n  function renderNotesList(notes) {\n    return [{}].concat(notes).map((note, i) =>\n      i !== 0 ? (\n        <LinkContainer key={note.noteId} to={`/challenges/${note.noteId}`}>\n          <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\n            {\"Created: \" + new Date(note.createdAt).toLocaleString()}\n          </ListGroupItem>\n        </LinkContainer>\n      ) : (\n        <LinkContainer key=\"new\" to=\"/challenges/new\">\n          <ListGroupItem>\n            <h4>\n              <b>{\"\\uFF0B\"}</b> Create a new challenge\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n      )\n    );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"Home\">\n      <div className=\"lander\">\n        <h1>Home Town</h1>\n        <p>This is the Home page for all your dance need</p>\n      </div>\n    </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Your Notes</PageHeader>\n        <ListGroup>\n          {!isLoading && renderNotesList(notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className = \"\",\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      className={`LoaderButton ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Login.css\";\n\nexport default function Login() {\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      userHasAuthenticated(true);\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Signup.css\";\n\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n  });\n  const history = useHistory();\n  const [newUser, setNewUser] = useState(null);\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password,\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      userHasAuthenticated(true);\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type,\n  });\n\n  return stored.key;\n}","export default {\n  MAX_ATTACHMENT_SIZE: 50000000,\n  s3: {\n    REGION: \"us-east-1\",\n    BUCKET: \"dance-town-app-api-dev-0-attachmentsbucket-1m6dsoqfa81qq\"\n  },\n  apiGateway: {\n    REGION: \"us-east-1\",\n    URL: \"https://1z9h7oowzl.execute-api.us-east-1.amazonaws.com/dev-0\"\n  },\n  cognito: {\n    REGION: \"us-east-1\",\n    USER_POOL_ID: \"us-east-1_FmaY7lyDe\",\n    APP_CLIENT_ID: \"l21rmjvnvl6ov8l9b23f7q7if\",\n    IDENTITY_POOL_ID: \"us-east-1:23fdb785-602c-4591-97b6-f687b3be51fe\"\n  },\n  social: {\n    FB: \"192446828747386\"\n  }\n};\n","import React, { useRef, useState } from \"react\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\n\nexport default function NewNote() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${\n          config.MAX_ATTACHMENT_SIZE / 1000000\n        } MB.`\n      );\n      return;\n    }\n  \n    setIsLoading(true);\n  \n    try {\n      const attachment = file.current ? await s3Upload(file.current) : null;\n  \n      await createNote({ content, attachment });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  \n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return (\n    <div className=\"NewNote\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"file\">\n          <ControlLabel>Attachment</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Challenges.css\";\n\nexport default function Notes() {\n    const file = useRef(null);\n    const { id } = useParams();\n    const history = useHistory();\n    const [challenge, setNote] = useState(null);\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n    useEffect(() => {\n        function loadNote() {\n            return API.get(\"notes\", `/notes/${id}`);\n        }\n\n        async function onLoad() {\n            try {\n                const challenge = await loadNote();\n                const { content, attachment } = challenge;\n\n                if (attachment) {\n                    challenge.attachmentURL = await Storage.vault.get(attachment);\n                }\n\n                setContent(content);\n                setNote(challenge);\n            } catch (e) {\n                onError(e);\n            }\n        }\n\n        onLoad();\n    }, [id]);\n\n    function validateForm() {\n        return content.length > 0;\n    }\n\n    function formatFilename(str) {\n        return str.replace(/^\\w+-/, \"\");\n    }\n\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    function saveNote(challenge) {\n        return API.put(\"notes\", `/notes/${id}`, {\n            body: challenge\n        });\n    }\n\n    async function handleSubmit(event) {\n        let attachment;\n\n        event.preventDefault();\n\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${\n                config.MAX_ATTACHMENT_SIZE / 1000000\n                } MB.`\n            );\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            if (file.current) {\n                attachment = await s3Upload(file.current);\n            }\n\n            await saveNote({\n                content,\n                attachment: attachment || challenge.attachment\n            });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function deleteNote() {\n        return API.del(\"notes\", `/notes/${id}`);\n    }\n\n    async function handleDelete(event) {\n        event.preventDefault();\n\n        const confirmed = window.confirm(\n            \"Are you sure you want to delete this challenge?\"\n        );\n\n        if (!confirmed) {\n            return;\n        }\n\n        setIsDeleting(true);\n\n        try {\n            await deleteNote();\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n\n    return (\n        <div className=\"Challenges\">\n            {challenge && (\n                <form onSubmit={handleSubmit}>\n                    <FormGroup controlId=\"content\">\n                        <FormControl\n                            value={content}\n                            componentClass=\"textarea\"\n                            onChange={e => setContent(e.target.value)}\n                        />\n                    </FormGroup>\n                    {challenge.attachment && (\n                        <FormGroup>\n                            <ControlLabel>Attachment</ControlLabel>\n                            <FormControl.Static>\n                                <a\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    href={challenge.attachmentURL}\n                                >\n                                    {formatFilename(challenge.attachment)}\n                                </a>\n                            </FormControl.Static>\n                        </FormGroup>\n                    )}\n                    {challenge.attachment && (\n                        <video width=\"320\" height=\"240\" controls>\n                            <source src={challenge.attachmentURL} type=\"video/mp4\" />\n                        </video>\n                    )}\n                    <FormGroup controlId=\"file\">\n                        {!challenge.attachment && <ControlLabel>Attachment</ControlLabel>}\n                        <FormControl onChange={handleFileChange} type=\"file\" />\n                    </FormGroup>\n                    <LoaderButton\n                        block\n                        type=\"submit\"\n                        bsSize=\"large\"\n                        bsStyle=\"primary\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                    >\n                        Save\n          </LoaderButton>\n                    <LoaderButton\n                        block\n                        bsSize=\"large\"\n                        bsStyle=\"danger\"\n                        onClick={handleDelete}\n                        isLoading={isDeleting}\n                    >\n                        Delete\n          </LoaderButton>\n                </form>\n            )}\n        </div>\n    );\n}","import React from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nexport default function AuthenticatedRoute({ children, ...rest }) {\n  const { pathname, search } = useLocation();\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={\n          `/login?redirect=${pathname}${search}`\n        } />\n      )}\n    </Route>\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nfunction querystring(name, url = window.location.href) {\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n  \n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n    const results = regex.exec(url);\n  \n    if (!results) {\n      return null;\n    }\n    if (!results[2]) {\n      return \"\";\n    }\n  \n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n\n  export default function UnauthenticatedRoute({ children, ...rest }) {\n    const { isAuthenticated } = useAppContext();\n    const redirect = querystring(\"redirect\");\n    return (\n      <Route {...rest}>\n        {!isAuthenticated ? (\n          children\n        ) : (\n          <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\n        )}\n      </Route>\n    );\n  }","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// Views:\nimport NotFound from \"./containers/NotFound\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Challenges from \"./containers/Challenges\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <UnauthenticatedRoute exact path=\"/login\">\n                <Login />\n            </UnauthenticatedRoute>\n            <UnauthenticatedRoute exact path=\"/signup\">\n                <Signup />\n            </UnauthenticatedRoute>\n            <AuthenticatedRoute exact path=\"/challenges/new\">\n                <NewNote />\n            </AuthenticatedRoute>\n            <AuthenticatedRoute exact path=\"/challenges/:id\">\n                <Challenges />\n            </AuthenticatedRoute>\n            <Route>\n                <NotFound />\n            </Route>\n\n        </Switch>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Routes from \"./Routes\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { AppContext } from \"./libs/contextLib\";\nimport \"./App.css\";\n\n\nfunction App() {\n  const history = useHistory();\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n  \n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch (e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  return (\n    !isAuthenticating &&\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">DanceTown</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullRight>\n            {isAuthenticated\n              ? <NavItem onClick={handleLogout}>Logout</NavItem>\n              : <>\n                <LinkContainer to=\"/signup\">\n                  <NavItem>Signup</NavItem>\n                </LinkContainer>\n                <LinkContainer to=\"/login\">\n                  <NavItem>Login</NavItem>\n                </LinkContainer>\n              </>\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <AppContext.Provider\n        value={{ isAuthenticated, userHasAuthenticated }}\n      >\n        <Routes />\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}